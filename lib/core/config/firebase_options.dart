// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart' show kIsWeb;
import 'package:marketinya/core/config/service_locator.dart';
import 'package:marketinya/core/models/secrets_response.dart';
import 'package:marketinya/core/repositories/vault_repository.dart';

enum FirebaseEnvironment { wip, prod }

class DefaultFirebaseOptions {
  static FirebaseEnvironment _environment = FirebaseEnvironment.wip;

  static void setEnvironment(FirebaseEnvironment environment) {
    _environment = environment;
  }

  static FirebaseEnvironment get currentEnvironment => _environment;

  static FirebaseOptions get currentPlatform {
    if (!kIsWeb) {
      throw UnsupportedError('Only web platform is supported');
    }

    final secrets = getIt<VaultRepository>().secrets;

    return switch (_environment) {
      FirebaseEnvironment.wip => _createWipOptions(secrets),
      FirebaseEnvironment.prod => _createProdOptions(secrets),
    };
  }

  static FirebaseOptions _createWipOptions(SecretsResponse? secrets) {
    return FirebaseOptions(
      apiKey: secrets?.wipWebFirebaseApiKey ?? 'apiKey',
      appId: secrets?.wipWebFirebaseAppId ?? 'appId',
      messagingSenderId: secrets?.wipWebFirebaseMessagingSenderId ?? 'senderId',
      projectId: secrets?.wipWebFirebaseProjectId ?? 'projectId',
      authDomain: secrets?.wipWebFirebaseAuthDomain,
      storageBucket: secrets?.wipWebFirebaseStorageBucket,
      measurementId: secrets?.wipWebFirebaseMeasurementId,
    );
  }

  static FirebaseOptions _createProdOptions(SecretsResponse? secrets) {
    return FirebaseOptions(
      apiKey: secrets?.prodWebFirebaseApiKey ?? 'apiKey',
      appId: secrets?.prodWebFirebaseAppId ?? 'appId',
      messagingSenderId: secrets?.prodWebFirebaseMessagingSenderId ?? 'senderId',
      projectId: secrets?.prodWebFirebaseProjectId ?? 'projectId',
      authDomain: secrets?.prodWebFirebaseAuthDomain,
      storageBucket: secrets?.prodWebFirebaseStorageBucket,
    );
  }
}
